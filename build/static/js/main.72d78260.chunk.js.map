{"version":3,"sources":["IntroComponent.jsx","questions.js","QuizComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","media","height","withRouter","history","classes","Card","CardMedia","image","className","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","onClick","push","questionNumbers","getQuestions","getNumbers","length","questions","number","randomNumber","indexOf","min","max","Math","ceil","random","theme","root","paddingTop","width","button","marginRight","spacing","marginTop","instructions","marginBottom","padding","QuizComponent","useState","activeStep","setActiveStep","answer","setAnswer","setQuestions","steps","useEffect","Number","localStorage","getItem","resetForm","setItem","Grid","container","item","xs","Paper","Stepper","map","label","index","Step","key","StepLabel","question","FormControl","FormLabel","RadioGroup","aria-label","name","value","onChange","event","target","step","answers","getAnswers","FormControlLabel","control","Radio","correctAnswer","prevActiveStep","createMuiTheme","palette","primary","main","App","ThemeProvider","AppBar","position","Toolbar","Container","maxWidth","path","exact","IntroComponent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.72d78260.chunk.js","sourcesContent":["import { Button, Card, CardActions, CardContent, CardMedia, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { withRouter } from 'react-router';\n\nconst useStyles = makeStyles({\n  media: {\n    height: 500,\n  }\n})\n\nconst IntroComponent = ({ history }) => {\n  const classes = useStyles();\n  return (\n    <Card>\n      <CardMedia image='sinterklaas.jpeg' className={classes.media} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          SchenkMulderDavidsVerkerk familiequiz\n        </Typography >\n        <Typography gutterBottom variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Sinterklaas zat te denken, zal ik de cadeaus zomaar schenken.\n          Helaas Mar, je bent er bijna.\n        </Typography>\n        <CardActions>\n          <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={() => history.push('/quiz')}>\n            Volgende\n          </Button>\n        </CardActions>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default withRouter(IntroComponent);","import questions from './questions.json';\nlet questionNumbers = [];\n\nconst getQuestions = () => {\n  return getNumbers();\n}\n\nconst resetQuestionNumber = () => {\n  questionNumbers = [];\n}\n\nconst getNumbers = () => {\n  if (questionNumbers.length === 5) {\n    return [\n      questions.questions[questionNumbers[0]],\n      questions.questions[questionNumbers[1]],\n      questions.questions[questionNumbers[2]],\n      questions.questions[questionNumbers[3]],\n      questions.questions[questionNumbers[4]]\n    ]\n  }\n\n  const number = randomNumber();\n  if (questionNumbers.indexOf(number) === -1) {\n    questionNumbers.push(number);\n    getNumbers();\n  } else {\n    getNumbers();\n  }\n}\nconst randomNumber = (min = 0, max = 9) => {\n  return Math.ceil(Math.random() * (max - min) + min);\n}\n\nexport { getQuestions, resetQuestionNumber }","import { Button, FormControl, FormControlLabel, FormLabel, Grid, makeStyles, Paper, Radio, RadioGroup, Step, StepLabel, Stepper, Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { getQuestions, resetQuestionNumber } from './questions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: '5em',\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n    marginTop: '2em'\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  questions: {\n    padding: '2em',\n  }\n}));\n\nconst QuizComponent = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  const [questions, setQuestions] = useState();\n  const steps = ['Vraag 1', 'Vraag 2', 'Vraag 3', 'Vraag 4', 'Vraag 5'];\n  const classes = useStyles();\n\n  useEffect(() => {\n    setActiveStep(Number(localStorage.getItem('step')) || 0);\n    getQuestions();\n    setQuestions(getQuestions());\n  }, []);\n\n  const handleNext = () => {\n    const correctAnswer = questions[activeStep].correctAnswer;\n    if (answer === correctAnswer) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      localStorage.setItem('step', 1);\n      setAnswer(0);\n    } else {\n      resetForm();\n    }\n  }\n\n  const resetForm = () => {\n    localStorage.setItem('step', 0);\n    setActiveStep(0);\n    setAnswer(0);\n    resetQuestionNumber();\n    getQuestions();\n    setQuestions(getQuestions());\n  }\n\n  const getQuestion = (step) => {\n    return questions[step].question;\n  }\n\n  const getAnswers = (step) => {\n    return questions[step].answers;\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Paper>\n          <Stepper activeStep={activeStep}>\n            {\n              steps.map((label, index) => {\n                return (\n                  <Step key={label}>\n                    <StepLabel></StepLabel>\n                  </Step>\n                )\n              })\n            }\n          </Stepper>\n          {\n            questions && <Grid container className={classes.questions}>\n              {activeStep === steps.length ? (\n                <>\n                  <Grid item xs={12}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.instructions}>\n                      Je hebt successvol de quiz afgerond.\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">\n                      De cijfercode is: 1234\n                    </Typography>\n                  </Grid>\n                </>\n              ) : (\n                  <>\n                    <Grid item xs={12}>\n                      <Typography className={classes.instructions}>{getQuestion(activeStep)}</Typography>\n                      <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Antwoord</FormLabel>\n                        <RadioGroup aria-label=\"gender\" name=\"gender1\" value={answer} onChange={(event) => setAnswer(event.target.value)}>\n                          {getAnswers(activeStep).map((answer) => {\n                            return (\n                              <FormControlLabel key={answer} value={answer} control={<Radio />} label={answer} />\n                            )\n                          })\n                          }\n\n                        </RadioGroup>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleNext}\n                        className={classes.button}\n                      >\n                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                      </Button>\n                    </Grid>\n                  </>\n                )\n              }\n            </Grid>\n          }\n        </Paper>\n      </Grid >\n    </Grid >\n  );\n}\n\nexport default QuizComponent;","import React from 'react';\nimport './App.css';\nimport { AppBar, Container, Toolbar, Typography } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from \"react-router-dom\";\nimport IntroComponent from './IntroComponent';\nimport QuizComponent from './QuizComponent';\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#d32f2f',\n\t\t}\n\t},\n});\n\nfunction App() {\n\treturn (\n\t\t<ThemeProvider theme={theme} >\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\tSinterklaas quiz\n\t\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<Container maxWidth=\"lg\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/\" exact component={IntroComponent} />\n\t\t\t\t\t\t<Route path=\"/quiz\" exact component={QuizComponent} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t</Container>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}